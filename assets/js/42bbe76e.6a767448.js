(self.webpackChunknodi_docs=self.webpackChunknodi_docs||[]).push([[969],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4444:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),a=["components"],s={sidebar_position:3},c="Directory Structure",u={unversionedId:"directory-structure",id:"directory-structure",isDocsHomePage:!1,title:"Directory Structure",description:"In this project, we are using NuxtJS as the main framework.",source:"@site/developer/directory-structure.md",sourceDirName:".",slug:"/directory-structure",permalink:"/docs/developer/directory-structure",editUrl:"https://github.com/Nodi3d/docs/edit/main/developer/directory-structure.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Firebase setup",permalink:"/docs/developer/getting-started/firebase"},next:{title:"Create a new Node",permalink:"/docs/developer/create-a-new-node"}},p=[],l={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"directory-structure"},"Directory Structure"),(0,i.kt)("p",null,"In this project, we are using ",(0,i.kt)("a",{parentName:"p",href:"https://nuxtjs.org/"},"NuxtJS")," as the main framework."),(0,i.kt)("p",null,"It basically follows the structure of NuxtJS, but\nHowever, it should be noted that the implementation of the geometry processing and node-based editor portions that are the core of Nodi have been developed in a manner that is as separate from Vue as possible."),(0,i.kt)("p",null,"This is because we intend to modularize the geometry processing and node-based editor parts so that they can be run in different applications in the future."),(0,i.kt)("p",null,"The most important part of the directory structure that needs to be explained is the ",(0,i.kt)("strong",{parentName:"p"},"assets/scripts")," section.\nThis section contains the implementation of the geometry handling and interfaces that are important for Nodi."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u251c\u2500\u2500 assets\n\u2502   \u251c\u2500\u2500 images: Image materials\n\u2502   \u251c\u2500\u2500 json: Text to manage node descriptions, etc.\n\u2502   \u251c\u2500\u2500 styles: Style files\n\u2502   \u2514\u2500\u2500 scripts\n|       \u251c\u2500\u2500 core\n\u2502           \u251c\u2500\u2500 data: Types of the data handled by the node and implementation of DataTree\n\u2502           \u251c\u2500\u2500 io: Classes that manage IO\n\u2502           \u251c\u2500\u2500 lib: Libraries that are not supported by npm (verbnurbs)\n\u2502           \u251c\u2500\u2500 math\n\u2502               \u251c\u2500\u2500 geometry: Geometric representation classes and implementations of various geometric operations\n\u2502               \u251c\u2500\u2500 misc: Utility implementation\n\u2502               \u251c\u2500\u2500 primitive: Primitive classes for complex numbers, NDomain, etc.\n\u2502           \u251c\u2500\u2500 misc: Interface and event definitions, etc.\n\u2502           \u251c\u2500\u2500 nodes: Class files for all nodes\n|       \u251c\u2500\u2500 editor: Editor UI implementation\n|       \u251c\u2500\u2500 service: Implementation for services such as project and user management\n\u2502       \u2514\u2500\u2500 viewer: Viewer UI implementation\n\u251c\u2500\u2500 components\n\u251c\u2500\u2500 pages\n.\n. (The others are basically in accordance with the NuxtJS structure, so they are omitted.)\n")))}d.isMDXComponent=!0}}]);